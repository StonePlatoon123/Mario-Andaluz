const { SlashCommandBuilder, EmbedBuilder, ActionRowBuilder, StringSelectMenuBuilder } = require('discord.js');
const { transcribirEPA, transcribirEmbedEPA, transcribirSelectOptionsEPA } = require('../epa-auto-transcriber');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('ayuda')
        .setDescription('Sistema de ayuda interactivo de Mario Andaluz'),

    async execute(interaction) {
        // Crear men√∫ de selecci√≥n
        const selectMenu = new StringSelectMenuBuilder()
            .setCustomId('ayuda_menu')
            .setPlaceholder('Selecciona una categor√≠a de ayuda')
            .addOptions(transcribirSelectOptionsEPA([
                {
                    label: 'üéØ Comandos Principales',
                    description: 'Comandos b√°sicos del bot',
                    value: 'comandos_principales'
                },
                {
                    label: 'üõ†Ô∏è Comandos de Utilidades',
                    description: 'Herramientas √∫tiles',
                    value: 'comandos_utilidades'
                },
                {
                    label: 'üîß Comandos de Administraci√≥n',
                    description: 'Comandos para administradores',
                    value: 'comandos_admin'
                },
                {
                    label: 'üí¨ Respuestas Autom√°ticas',
                    description: 'C√≥mo funciona el sistema de respuestas',
                    value: 'respuestas_automaticas'
                },
                {
                    label: 'üîó Sistema de Webhooks',
                    description: 'Informaci√≥n sobre webhooks',
                    value: 'sistema_webhooks'
                },
                {
                    label: '‚ùì Soluci√≥n de Problemas',
                    description: 'Ayuda con problemas comunes',
                    value: 'solucion_problemas'
                }
            ]));

        const row = new ActionRowBuilder().addComponents(selectMenu);

        const ayudaEmbed = new EmbedBuilder()
            .setColor('#FFD700')
            .setTitle('üéØ Sistema de Ayuda - Mario Andaluz')
            .setDescription('¬°EPA! Selecciona una categor√≠a para obtener ayuda detallada, colega.')
            .addFields(
                { name: 'üéØ Comandos Principales', value: '`/transcribir`, `/saludo`, `/frases`, `/info`', inline: true },
                { name: 'üõ†Ô∏è Utilidades', value: '`/utilidades`, `/estadisticas`, `/ayuda`', inline: true },
                { name: 'üîß Administraci√≥n', value: '`/admin` (requiere permisos)', inline: true }
            )
            .setThumbnail(interaction.client.user.displayAvatarURL())
            .setTimestamp()
            .setFooter({ text: '¬°EPA! ¬°Ayuda disponible, colega!' });

        const embedTranscrito = transcribirEmbedEPA(ayudaEmbed);
        await interaction.reply({ embeds: [embedTranscrito], components: [row] });

        // Manejar la selecci√≥n del men√∫
        const filter = i => i.user.id === interaction.user.id;
        const collector = interaction.channel.createMessageComponentCollector({ filter, time: 60000 });

        collector.on('collect', async i => {
            if (i.customId === 'ayuda_menu') {
                const value = i.values[0];
                let embedResponse;

                switch (value) {
                    case 'comandos_principales':
                        embedResponse = new EmbedBuilder()
                            .setColor('#FFD700')
                            .setTitle('üéØ Comandos Principales')
                            .setDescription('Comandos b√°sicos de Mario Andaluz')
                            .addFields(
                                { name: '`/transcribir`', value: 'Convierte texto al andaluz EPA usando la API de AndaluGeeks\n**Opciones:** texto (requerido), webhook (opcional)', inline: false },
                                { name: '`/saludo`', value: 'Saludo personalizado en andaluz\n**Opciones:** nombre (opcional)', inline: false },
                                { name: '`/frases`', value: 'Frases t√≠picas andaluzas\n**Opciones:** tipo (saludos, despedidas, expresiones, aleatorio)', inline: false },
                                { name: '`/info`', value: 'Informaci√≥n completa del bot y sus funcionalidades', inline: false }
                            )
                            .setTimestamp();
                        break;

                    case 'comandos_utilidades':
                        embedResponse = new EmbedBuilder()
                            .setColor('#FFD700')
                            .setTitle('üõ†Ô∏è Comandos de Utilidades')
                            .setDescription('Herramientas √∫tiles del bot')
                            .addFields(
                                { name: '`/utilidades ping`', value: 'Comprobar la latencia del bot', inline: false },
                                { name: '`/utilidades avatar`', value: 'Ver el avatar de un usuario\n**Opciones:** usuario (opcional)', inline: false },
                                { name: '`/utilidades servidor`', value: 'Informaci√≥n detallada del servidor', inline: false },
                                { name: '`/estadisticas`', value: 'Estad√≠sticas completas del servidor y bot', inline: false }
                            )
                            .setTimestamp();
                        break;

                    case 'comandos_admin':
                        embedResponse = new EmbedBuilder()
                            .setColor('#FFD700')
                            .setTitle('üîß Comandos de Administraci√≥n')
                            .setDescription('Comandos para administradores (requiere permisos)')
                            .addFields(
                                { name: '`/admin stats`', value: 'Estad√≠sticas del bot (servidores, usuarios, memoria, etc.)', inline: false },
                                { name: '`/admin reload`', value: 'Recargar comandos del bot', inline: false },
                                { name: '`/admin webhook listar`', value: 'Listar webhooks del servidor', inline: false },
                                { name: '`/admin webhook limpiar`', value: 'Limpiar webhooks del bot', inline: false }
                            )
                            .setTimestamp();
                        break;

                    case 'respuestas_automaticas':
                        embedResponse = new EmbedBuilder()
                            .setColor('#FFD700')
                            .setTitle('üí¨ Respuestas Autom√°ticas')
                            .setDescription('C√≥mo funciona el sistema de respuestas autom√°ticas')
                            .addFields(
                                { name: 'üéØ Palabras clave', value: 'hola, hello, hi, gracias, thanks, adi√≥s, bye, bot, mario, andaluz, andaluc√≠a', inline: false },
                                { name: '‚ö° Funcionamiento', value: 'El bot responde autom√°ticamente cuando detecta estas palabras en los mensajes', inline: false },
                                { name: '‚è∞ Cooldown', value: '5 segundos entre respuestas para evitar spam', inline: false },
                                { name: 'üîß Personalizaci√≥n', value: 'Puedes modificar las respuestas en el archivo config.js', inline: false }
                            )
                            .setTimestamp();
                        break;

                    case 'sistema_webhooks':
                        embedResponse = new EmbedBuilder()
                            .setColor('#FFD700')
                            .setTitle('üîó Sistema de Webhooks')
                            .setDescription('Informaci√≥n sobre el sistema de webhooks para transcripciones')
                            .addFields(
                                { name: 'üéØ Prop√≥sito', value: 'Las transcripciones se env√≠an como webhooks simulando al usuario', inline: false },
                                { name: 'üîí Privacidad', value: 'El comando no deja rastro visible, solo la transcripci√≥n', inline: false },
                                { name: '‚è∞ Duraci√≥n', value: 'Los webhooks se eliminan autom√°ticamente despu√©s de 5 segundos', inline: false },
                                { name: 'üõ†Ô∏è Configuraci√≥n', value: 'Puedes desactivar webhooks usando la opci√≥n webhook:false', inline: false }
                            )
                            .setTimestamp();
                        break;

                    case 'solucion_problemas':
                        embedResponse = new EmbedBuilder()
                            .setColor('#FFD700')
                            .setTitle('‚ùì Soluci√≥n de Problemas')
                            .setDescription('Ayuda con problemas comunes')
                            .addFields(
                                { name: '‚ùå Error de API Key', value: 'Verifica tu API key de AndaluGeeks en el archivo .env', inline: false },
                                { name: '‚ùå Comandos no aparecen', value: 'Ejecuta `node deploy-commands.js` y espera unos minutos', inline: false },
                                { name: '‚ùå Webhooks no funcionan', value: 'Verifica que el bot tenga permisos de gesti√≥n de webhooks', inline: false },
                                { name: '‚ùå Bot no responde', value: 'Revisa los logs del bot y verifica la configuraci√≥n', inline: false }
                            )
                            .setTimestamp();
                        break;
                }

                await i.update({ embeds: [embedResponse], components: [row] });
            }
        });

        collector.on('end', async () => {
            const timeoutEmbed = new EmbedBuilder()
                .setColor('#FF0000')
                .setTitle('‚è∞ Tiempo agotado')
                .setDescription('El men√∫ de ayuda ha expirado. Usa `/ayuda` para abrirlo de nuevo.')
                .setTimestamp();

            try {
                await interaction.editReply({ embeds: [timeoutEmbed], components: [] });
            } catch (error) {
                console.log('No se pudo actualizar el mensaje de ayuda:', error.message);
            }
        });
    },
};
